{"version":3,"file":"core.min.js","sources":["../src/lib/renderer.mjs","../src/lib/component.mjs","../src/hooks/core_hooks.mjs"],"sourcesContent":["let currentElement;\r\nlet currentHookStateIndex = undefined;\r\nconst hookStateMap = new Map();\r\nconst passPropsMap = new Map();\r\nlet rendering = false;\r\nconst renderQueue = [];\r\nconst afterRenderQueue = [];\r\nconst render = element => {\r\n  currentElement = element;\r\n  if (!hookStateMap.has(element)) {\r\n    hookStateMap.set(element, []);\r\n  }\r\n  currentHookStateIndex = -1;\r\n  element.render();\r\n  const afterRenderQueueLength = afterRenderQueue.length;\r\n  let afterRenderQueueIndex = afterRenderQueueLength;\r\n  while (afterRenderQueueIndex--) {\r\n    const afterRenderQueueLocalIndex =\r\n      afterRenderQueueLength - afterRenderQueueIndex - 1;\r\n    afterRenderQueue[afterRenderQueueLocalIndex]();\r\n  }\r\n  afterRenderQueue.length = 0;\r\n  currentHookStateIndex = undefined;\r\n};\r\nconst unqeue = () => {\r\n  const queue = [...renderQueue];\r\n  renderQueue.length = 0;\r\n  rendering = true;\r\n  requestAnimationFrame(() => {\r\n    queue.forEach(element => render(element));\r\n    rendering = false;\r\n    if (renderQueue.length > 0) unqeue();\r\n  });\r\n};\r\nexport const queueRender = (element, force) => {\r\n  if (\r\n    (renderQueue.indexOf(element) === -1 && element._isConnected === true) ||\r\n    force\r\n  ) {\r\n    renderQueue.push(element);\r\n  }\r\n  if (!rendering) {\r\n    unqeue();\r\n  }\r\n};\r\nexport const getPassableProps = id => {\r\n  const props = passPropsMap.get(id);\r\n  passPropsMap.delete(id);\r\n  return props;\r\n};\r\nlet passPropsId = 100000;\r\nexport const addPassableProps = props => {\r\n  let id = passPropsId.toString(16);\r\n  passPropsId++;\r\n  if (id.length % 2) {\r\n    id = \"0\" + id;\r\n  }\r\n  passPropsMap.set(id, props);\r\n  return id;\r\n};\r\nexport const prps = props => {\r\n  let id = addPassableProps(props);\r\n  return {\r\n    \"data-props\": id\r\n  };\r\n};\r\nexport const nextHook = () => {\r\n  if (currentHookStateIndex === undefined) {\r\n    throw new Error(\"Using hooks outside of a component is forbidden!\");\r\n  }\r\n  currentHookStateIndex = currentHookStateIndex + 1;\r\n};\r\nexport const createHook = hook => (...args) => {\r\n  nextHook();\r\n  return hook(...args);\r\n};\r\nexport const queueAfterRender = callback => {\r\n  afterRenderQueue.push(callback);\r\n};\r\n\r\nexport const getCurrentHookState = initialState => {\r\n  const hookState = hookStateMap.get(currentElement);\r\n  if (!hookState[currentHookStateIndex]) {\r\n    hookState[currentHookStateIndex] = initialState;\r\n    return initialState;\r\n  }\r\n  return hookState[currentHookStateIndex];\r\n};\r\n\r\nexport const getCurrentElement = () => {\r\n  return currentElement;\r\n};\r\n\r\nexport const defaultRenderer = (view, shadowRoot) => {\r\n  if (\r\n    !(view instanceof NodeList\r\n      ? shadowRoot.contains(view[0])\r\n      : shadowRoot.contains(view))\r\n  ) {\r\n    shadowRoot.innerHTML = \"\";\r\n    if (view instanceof NodeList) {\r\n      view.forEach(node => shadowRoot.appendChild(node));\r\n    } else {\r\n      shadowRoot.appendChild(view);\r\n    }\r\n  }\r\n};\r\n","import { queueRender, defaultRenderer, getPassableProps } from \"./renderer.mjs\";\r\nexport { prps } from \"./renderer.mjs\";\r\nconst componentMap = new Map();\r\nfunction addComponent(name, options) {\r\n  class Component extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this._props = {};\r\n      this._renderer = defaultRenderer;\r\n      this._isConnected = false;\r\n    }\r\n    connectedCallback() {\r\n      if (!this._shadowRoot) {\r\n        this._shadowRoot = this.attachShadow({ mode: \"open\" });\r\n      }\r\n      if (!this._isConnected) {\r\n        this._isConnected = true;\r\n        queueRender(this);\r\n      }\r\n    }\r\n    disconnectedCallback() {\r\n      if (this._isConnected) {\r\n        this._isConnected = false;\r\n        queueRender(this, true);\r\n      }\r\n    }\r\n    render() {\r\n      const propsId = this.getAttribute(\"data-props\");\r\n      if (propsId) {\r\n        this._props = getPassableProps(propsId);\r\n        this.skipQueue = true;\r\n        this.removeAttribute(\"data-props\");\r\n      }\r\n      const view = componentMap.get(name)(this._props);\r\n      this._renderer(view, this._shadowRoot);\r\n      this.init = false;\r\n    }\r\n    attributeChangedCallback(attrName, oldVal, newVal) {\r\n      if (this.init) {\r\n        return;\r\n      }\r\n      if (!this.skipQueue && oldVal !== newVal) {\r\n        queueRender(this);\r\n      }\r\n      this.skipQueue = false;\r\n    }\r\n    static get observedAttributes() {\r\n      let observedAttributes = [\"data-props\"];\r\n      if (options.observedAttributes) {\r\n        observedAttributes = observedAttributes.concat(\r\n          options.observedAttributes\r\n        );\r\n      }\r\n      return observedAttributes;\r\n    }\r\n  }\r\n  customElements.define(name, Component);\r\n}\r\nexport const defineComponent = (name, component, options = {}) => {\r\n  if (!componentMap.has(name)) {\r\n    componentMap.set(name, component);\r\n    addComponent(name, options);\r\n  } else {\r\n    console.warn(`Component ${name} was already defined.`);\r\n  }\r\n};\r\n","import {\r\n  getCurrentElement,\r\n  getCurrentHookState,\r\n  queueRender,\r\n  queueAfterRender,\r\n  createHook\r\n} from \"../lib/renderer.mjs\";\r\n\r\nexport const useHostElement = createHook(() => {\r\n  return getCurrentElement();\r\n});\r\nexport const useShadowRoot = createHook(() => {\r\n  return useHostElement()._shadowRoot;\r\n});\r\nexport const useReducer = createHook((reducer, initialState) => {\r\n  const hookState = getCurrentHookState({\r\n    reducer,\r\n    state: initialState\r\n  });\r\n  const element = useHostElement();\r\n  return [\r\n    hookState.state,\r\n    action => {\r\n      hookState.state = hookState.reducer(hookState.state, action);\r\n      queueRender(element);\r\n    }\r\n  ];\r\n});\r\nexport const useState = createHook(initialState => {\r\n  const [state, dispatch] = useReducer((_, action) => {\r\n    return action.value;\r\n  }, initialState);\r\n\r\n  return [\r\n    state,\r\n    newState =>\r\n      dispatch({\r\n        type: \"set_state\",\r\n        value: newState\r\n      })\r\n  ];\r\n});\r\nexport const useRenderer = createHook(rendererIn => {\r\n  const renderer = getCurrentHookState(rendererIn);\r\n  const element = useHostElement();\r\n  element._renderer = renderer;\r\n});\r\nexport const useEffect = createHook((effect, values) => {\r\n  const state = getCurrentHookState({\r\n    effect,\r\n    values,\r\n    cleanUp: () => {}\r\n  });\r\n  const isConnected = useConnectedState();\r\n  if (isConnected) {\r\n    let nothingChanged = false;\r\n    if (state.values !== values && state.values && state.values.length > 0) {\r\n      nothingChanged = true;\r\n      let index = state.values.length;\r\n\r\n      while (index--) {\r\n        if (values[index] !== state.values[index]) {\r\n          nothingChanged = false;\r\n          break;\r\n        }\r\n      }\r\n      state.values = values;\r\n    }\r\n    if (!nothingChanged) {\r\n      state.cleanUp();\r\n      queueAfterRender(() => {\r\n        const cleanUp = state.effect();\r\n        if (cleanUp) {\r\n          state.cleanUp = cleanUp;\r\n        }\r\n      });\r\n    }\r\n  } else {\r\n    state.cleanUp();\r\n    state.cleanUp = () => {};\r\n  }\r\n});\r\nexport const useAttribute = createHook(attributeName => {\r\n  const element = useHostElement();\r\n  const attributeValue = element.getAttribute(attributeName);\r\n  return [\r\n    attributeValue,\r\n    value => {\r\n      element.skipQueue = true;\r\n      element.setAttribute(attributeName, value);\r\n    }\r\n  ];\r\n});\r\nexport const useCSS = createHook((parts, ...slots) => {\r\n  let styles;\r\n  if (parts instanceof Array) {\r\n    styles = parts\r\n      .map((part, index) => {\r\n        if (slots[index]) {\r\n          return part + slots[index];\r\n        } else {\r\n          return part;\r\n        }\r\n      })\r\n      .join(\"\");\r\n  } else {\r\n    styles = parts;\r\n  }\r\n  styles = styles.replace(/ +(?= )/g, \"\").replace(/\\n/g, \"\");\r\n  const shadowRoot = useShadowRoot();\r\n  const style = document.createElement(\"style\");\r\n  style.innerHTML = styles;\r\n  useEffect(() => {\r\n    shadowRoot.appendChild(style);\r\n    return () => {\r\n      shadowRoot.removeChild(style);\r\n    };\r\n  });\r\n});\r\nexport const useExposeMethod = createHook((name, method) => {\r\n  const element = useHostElement();\r\n  element[name] = (...args) => method(...args);\r\n});\r\nexport const useConnectedState = createHook(() => {\r\n  const element = useHostElement();\r\n  return element._isConnected;\r\n});\r\n"],"names":["currentElement","currentHookStateIndex","undefined","hookStateMap","Map","passPropsMap","rendering","renderQueue","afterRenderQueue","unqeue","queue","length","requestAnimationFrame","forEach","element","has","set","render","afterRenderQueueLength","afterRenderQueueIndex","queueRender","force","indexOf","_isConnected","push","getPassableProps","id","props","get","delete","passPropsId","createHook","hook","args","Error","nextHook","getCurrentHookState","initialState","hookState","defaultRenderer","view","shadowRoot","NodeList","contains","innerHTML","node","appendChild","componentMap","useHostElement","getCurrentElement","useShadowRoot","_shadowRoot","useReducer","reducer","state","action","useState","dispatch","_","value","newState","type","useRenderer","rendererIn","renderer","_renderer","useEffect","effect","values","cleanUp","useConnectedState","nothingChanged","index","callback","queueAfterRender","useAttribute","attributeName","getAttribute","skipQueue","setAttribute","useCSS","parts","slots","styles","Array","map","part","join","replace","style","document","createElement","removeChild","useExposeMethod","name","method","component","options","console","warn","customElements","define","HTMLElement","[object Object]","super","this","_props","attachShadow","mode","propsId","removeAttribute","init","attrName","oldVal","newVal","observedAttributes","concat","addComponent","data-props","toString","addPassableProps"],"mappings":"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"}